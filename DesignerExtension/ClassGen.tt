<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ Assembly Name="Microsoft.VisualStudio.ArchitectureTools.Extensibility.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ Modeling Processor="ModelingProcessor" ElementType="Microsoft.VisualStudio.Uml.Classes.IClass" ApplyStereotypes="CSharp" #>
<#@ Include File="CSharpHelpers.t4" #>
<#   
   WriteWarningHeader(); 
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using UMLModule;
using UMLModule.Attributes;

<#
   if(!string.IsNullOrEmpty(_namespace))
   {
#>
namespace <#=  _namespace #>
{
<#
      PushIndent(_indent);
   }
#>
<#= _class.Visibility.ToString().ToLower() #><#= _class.IsAbstract ? " abstract" : "" #> partial class <#= _class.Name #> : <#= _class.Name #>Base
{
<#
    PushIndent("\t");

    // Write Attributes
    var ownedAttributes = _class.OwnedAttributes;
    foreach(IProperty attribute in ownedAttributes)
    {
      // dont write private properties, because they are already definded in the base class
      if(attribute.Visibility != VisibilityKind.Private)
      {
         WriteClassUmlPropertyDefinition(attribute);
         WriteLine("");
      }	
    }
#>
<#
    // Write Associations
    var navigableOwnedEnds = GetNavigableOwnedEnds(_class, ownedAttributes);
    foreach(IProperty ownedEnd in navigableOwnedEnds) 
    {
        WriteClassUmlPropertyDefinition(ownedEnd);
        WriteLine("");
    }
#>
}
<#
   if(!string.IsNullOrEmpty(_namespace))
   {
      PopIndent();
      WriteLine("}");
   }
#>


<#+
   private void WriteWarningHeader()
   {
#>
//------------------------------------------------------------------------------
// <auto-generated>
<#+
      foreach (string line in WarningHeader.Split('\n'))
      {
         Write(@"//     ");
         WriteLine(line.Trim());
      }
#>
// </auto-generated>
//------------------------------------------------------------------------------
<#+
   }

   

    /// <summary>
    /// Write UmlProperty definition.
    /// </summary>
    /// <param name="property">The uml IProperty</param>
    private void WriteClassUmlPropertyDefinition(IProperty property)
    {
        WriteUmlPropertyDefinition(property);
    }
#>